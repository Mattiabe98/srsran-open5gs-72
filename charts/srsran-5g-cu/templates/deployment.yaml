apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        cpu-quota.crio.io: "disable"
        cpu-load-balancing.crio.io: "disable"
    spec:
      shareProcessNamespace: true      
      {{- include "srsran.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      serviceAccountName: {{ include "srsran.serviceAccountName" . }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      # yamllint disable rule:indentation
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      # yamllint enable rule:indentation
      {{- end }}
      initContainers:
        {{- if .Values.initContainers }} 
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ include "common.names.fullname" . }}-gnb
          image: {{ template "srsran.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- else }}
          command: ["/bin/sh", "-c"]
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            # - exec /entrypoint.sh;
            - sleep 10000;
          {{- end }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          env:
            - name: AMF_HOSTNAME
              value: {{ .Values.config.amf.hostname }}
            - name: E2_HOSTNAME
              value: e2term-service          
            - name: AMF_BIND_INTERFACE
              value: {{ .Values.config.amf.bind_interface }}
            - name: METRICS_ADDR
              value: metrics-server
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: gtpu
              containerPort: {{ .Values.containerPorts.gtpu }}
              protocol: UDP
          {{- if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          resources:
            requests:
              memory: 64Gi
              cpu: 8
            limits:
              memory: 64Gi
              cpu: 8
          volumeMounts:
            - name: srsran-5g-cu-config
              mountPath: /gnb-template.yml
              subPath: gnb-template.yml
            - name: entrypoint
              mountPath:  /entrypoint.sh
              subPath: entrypoint.sh
            - name: vpp-config
              mountPath:  /etc/vpp/
              subPath: startup.conf
            - mountPath: /dev/vfio
              name: vfio
            - name: memif-socket
              mountPath: /run/memif
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.start.turbostat }}
        - name: hw-metrics
          image: "docker.io/boing7898/ric-plt-xapp-frame-py:latest"
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add:
                - CAP_PERFMON
                - CAP_SYS_PTRACE
                - CAP_SYSLOG            
          command: [ "/bin/sh", "-c" ]
          args:
            - exec /start-metrics.sh
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "/start-metrics.sh graceful_shutdown"]    
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          volumeMounts:
            - name: local-storage
              mountPath: /mnt/data
            - name: metrics
              mountPath:  /start-metrics.sh
              subPath: start-metrics.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          stdin: true
          tty: true
        {{- end }}
      runtimeClassName: performance-srsran-profile
      volumes:
        - name: srsran-5g-cu-config
          configMap:
            name: {{ include "common.names.fullname" . }}
        - name: local-storage
          persistentVolumeClaim:
            claimName: local-pvc
        - name: memif-socket
          hostPath:
            path: /var/run/memif
            type: DirectoryOrCreate
        - name: vfio
          hostPath:
            path: /dev/vfio
            type: Directory
        - name: entrypoint
          configMap:
            name: {{ include "common.names.fullname" . }}-entrypoint
            defaultMode: 0777
        - name: vpp-config
          configMap:
            name: vpp-config
            defaultMode: 0777
        - name: metrics
          configMap:
            name: {{ include "common.names.fullname" . }}-metrics
            defaultMode: 0777      
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}

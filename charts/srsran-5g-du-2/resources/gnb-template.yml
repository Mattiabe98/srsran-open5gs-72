# This example configuration outlines how to configure the srsRAN Project gNB to create a single TDD cell
# transmitting in band 78, with 20 MHz bandwidth and 30 kHz sub-carrier-spacing. A USRP B200 is configured 
# as the RF frontend using split 8. Note in this example an external clock source is not used, so the sync 
# is not defined and the default is used. 

gnb_du_id: 2

f1ap:                               # Interface between DU and CU-CP
  cu_cp_addr: 192.168.77.1             # Required TEXT (127.0.10.1). Sets the CU-CP F1-C address to connect to. 
  bind_addr: 192.168.77.4               # Required TEXT (127.0.10.2). Sets the DU F1-C bind address. If left empty, implicit bind is performed. 

f1u:
  socket:
    -
      bind_addr: 192.168.77.4

cell_cfg:
  dl_arfcn: 664266                  # ARFCN of the downlink carrier (center frequency).
  band: 77                           # The NR band.
  channel_bandwidth_MHz: 40          # Bandwith in MHz. Number of PRBs will be automatically derived.
  common_scs: 30                   # Subcarrier spacing in kHz used for data.
  plmn: "00101"                   # PLMN broadcasted by the gNB.
  tac: 1                            # Tracking area code (needs to match the core configuration).
  pci: 2
  nof_antennas_dl: 2                    # Optional UINT (1). Sets the number of antennas for downlink transmission. Supported: [1, 2, 4].
  nof_antennas_ul: 2                    # Optional UINT (1). Sets the number of antennas for uplink transmission. Supported: [1, 2, 4].  
  prach:
    prach_config_index: 159           # Sets PRACH config to match what is expected by srsUE      
    prach_root_sequence_index: 1
    prach_frequency_start: 0
    zero_correlation_zone: 0
    ra_resp_window: 10
    # nof_cb_preambles_per_ssb: 15
  pdsch:
    mcs_table: qam256
  pusch:
    dmrs_additional_position: 2
    msg3_delta_preamble: 2
    p0_nominal_with_grant: -100
    mcs_table: qam256
  pucch:
    p0_nominal: -96
  pdcch:
    common:
      coreset0_index: 11                           # Optional INT. Sets the CORESET 0 index. Supported: [0 - 15].
      ss0_index: 0                              # Optional UINT (0). Sets the SearchSpace#0 index. Supported: [0 - 15].
    dedicated:
      coreset1_rb_start: 0                      # Optional INT (0). Sets the starting common resource block (CRB) number for CORESET 1, relative to CRB0. Supported: [0 - 275].
  tdd_ul_dl_cfg:
    dl_ul_tx_period: 10
    nof_dl_symbols: 6                                               # Number of Downlink symbols at the beginning of the slot following full Downlink slots. OAI Config: nrofDownlinkSymbols
    nof_ul_symbols: 4                                               # Number of Uplink symbols at the end of the slot preceding the first full Uplink slot. OAI Config: nrofUplinkSymbols
    nof_dl_slots: 7                                                 # Number of consecutive full Downlink slots.  OAI Config: nrofDownlinkSlots
    nof_ul_slots: 2                                                 # Number of consecutive full Uplink slots.  OAI Config: nrofUplinkSlots
  ssb:
    ssb_period: 20     
    ssb_block_power_dbm: 0
  ul_common:
    p_max: 23

  slicing:
  {{- range .Values.config.slicing }}
    - {{- toYaml . | nindent 6 }}
    {{- end }}


ru_ofh:
  ru_bandwidth_MHz: 40
  t1a_max_cp_dl: 336
  t1a_min_cp_dl: 285
  t1a_max_cp_ul: 211
  t1a_min_cp_ul: 160
  t1a_max_up: 345
  t1a_min_up: 294
  ta4_max: 331
  ta4_min: 50
  ignore_ecpri_payload_size: true
  is_prach_cp_enabled: true           # Configures if Control-Plane messages should be used to receive PRACH messages.
  compr_method_ul: bfp                 # Uplink compression method.
  compr_bitwidth_ul: 9                 # Uplink IQ samples bitwidth after compression.
  compr_method_dl: bfp                 # Downlink compression method.
  compr_bitwidth_dl: 9                 # Downlink IQ samples bitwidth after compression.
  compr_method_prach: bfp              # PRACH compression method.
  compr_bitwidth_prach: 9              # PRACH IQ samples bitwidth after compression.
  enable_ul_static_compr_hdr: true     # Configures if the compression header is present for uplink User-Plane messages (false) or not present (true).
  enable_dl_static_compr_hdr: true     # Configures if the compression header is present for downlink User-Plane messages (false) or not present (true).
  iq_scaling: 0.1                  # IQ samples scaling factor applied before compression, should be a positive value smaller than 10. (5!)
  cells:
    - network_interface: 0000:51:11.6     # Ethernet interface name used to communicate with the RU.
      ru_mac_addr: 1c:a0:ef:87:68:b6   # RU MAC address.
      du_mac_addr: 72:0e:9b:5f:81:e2   # DU MAC address.
      vlan_tag_cp: 10                   # VLAN tag value for CP.
      vlan_tag_up: 10                   # VLAN tag value for UP.
      prach_port_id: [520, 521]            # PRACH eAxC port value.
      dl_port_id: [512, 513]         # Downlink eAxC port values.
      ul_port_id: [512, 513]              # Uplink eAxC port values.


e2:
  enable_du_e2: true                # Enable DU E2 agent (one for each DU instance)
  e2sm_kpm_enabled: true            # Enable KPM service module
  e2sm_rc_enabled: true             # Enable RC service module
  addr: ${E2_ADDR}                 # RIC IP address
  bind_addr: ${AMF_BIND_ADDR}
  port: 36421                       # RIC port

metrics:
  enable_json: true       # Enable reporting metrics in JSON format
  addr: grafana-srsran-metrics-server             # Metrics-server IP
  port: 55555                     # Metrics-server Port  
  autostart_stdout_metrics: true

hal:
   eal_args: "-a 0000:51:11.6"

# expert_execution:
#   affinities:
#     low_priority_cpus: 10
#     ru_timing_cpu: 11        # TRY TWO cores again for timing (8 was idle, 14 was free)
#     ofh:
#       - ru_txrx_cpus: 40  # Thread 1 runs on core 19
#   cell_affinities:
#     -
#        l1_dl_cpus: 41         # Unchanged (were idle)
#        l1_ul_cpus: 42        # Unchanged (were idle)
#        l2_cell_cpus: 43         # REVERT to single core (18 was idle)
#        ru_cpus: 10            # REVERT to single core (15 was idle)
  # threads:
  #   non_rt:
  #     nof_non_rt_threads: 4                   # Optional UINT (4). Sets the number of non real time threads for processing of CP and UP data in upper layers.
  #     non_rt_task_queue_size: 2048            # Optional UINT (2048). Sets the non real time task worker queue size. 
  #   upper_phy:
  #     pdsch_processor_type: auto              # Optional TEXT (auto). Sets the PDSCH processor type. Supported: [auto, generic, concurrent, lite].
  #     pdsch_cb_batch_length: 0                # Optional UINT (0). Sets PDSCH flexible processor clodeblock-batch size. Supported values: 
  #                                             # 'auto' -> adapts the batch length to the number of threads dedicated to downlink processing 
  #                                             # 'synchronous' -> disables batch-splitting and ensure that TB processing remains within the calling thread without parallelization
  #     nof_pusch_decoder_threads: 4            # Optional UINT (1). Sets the number of threads used to encode PUSCH.
  #     nof_ul_threads: 4                       # Optional UINT (1). Sets the number of upprt PHY threads to proccess uplink.
  #     nof_dl_threads: 4                       # Optional UINT (1). Sets the number of upprt PHY threads to proccess downlink.



log:
  filename: stdout         # Path of the log file.
  all_level: info                   # Logging level applied to all layers.

pcap:
  mac_enable: false                 # Set to true to enable MAC-layer PCAPs.
  mac_filename: ./gnb_mac.pcap   # Path where the MAC PCAP is stored.
